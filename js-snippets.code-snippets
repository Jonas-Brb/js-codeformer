{
    "Variable": {
        "scope": "javascript,html,javascriptreact,jsx",
        "prefix": "jscf-var-const-let",
        "body": [
            "${1|const,let,var|} ${2:variableName} = ${TM_SELECTED_TEXT};"
        ],
        "description": "Basic variable"
    },
    "Parameter": {
        "scope": "javascript,html,javascriptreact,jsx",
        "prefix": "jscf-parameter-argument",
        "body": [
            "${1:name}${2: = ${TM_SELECTED_TEXT}}"
        ],
        "description": "Parameter with optional default value"
    },
    "Function": {
        "scope": "javascript,html,javascriptreact,jsx",
        "prefix": "jscf-function",
        "body": [
            "${1|function,async function,function*|} ${2:functionName }(${3:parameters}) {",
            "\t${TM_SELECTED_TEXT}$0",
            "}"
        ],
        "description": "New function"
    },
    "Arrow Function": {
        "scope": "javascript,html,javascriptreact,jsx",
        "prefix": "jscf-arrow-function-lambda",
        "body": [
            "(${1:parameters}) => ${2:{\n\t${TM_SELECTED_TEXT}\n}}"
        ],
        "description": "New Arrow Function"
    },
    "Promise then": {
        "scope": "javascript,html,javascriptreact,jsx",
        "prefix": "jscf-promise-then",
        "body": [
            ".then((${1:result}) => ${2:{\n\t${TM_SELECTED_TEXT}$0\n}})"
        ],
        "description": "Promise then function call"
    },
    "Promise catch": {
        "scope": "javascript,html,javascriptreact,jsx",
        "prefix": "jscf-promise-catch",
        "body": [
            ".catch(function(${1:error})${2:{\n\t${TM_SELECTED_TEXT}$0\n}});"
        ],
        "description": "Promise catch function call"
    },
    "Try/Catch": {
        "scope": "javascript,html,javascriptreact,jsx",
        "prefix": "jscf-try-catch",
        "body": [
            "try {",
            "\t${1:${TM_SELECTED_TEXT}}",
            "} catch (${2:error}) {",
            "\t$3",
            "}"
        ],
        "description": "Standard try/catch block"
    }
}